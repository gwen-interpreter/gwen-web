# 
# Gwen workspace
# ==============

# -----------------------------------------------------------------------------
# Gwen workspace properties and settings
# -----------------------------------------------------------------------------
# Properties and settings that are common to all environments are defined here.
# These can be overriden by:
#   - environment level properties defined in env/<env>.properties files in the
#     env directory
#   - local properties defined in the <userhome>/gwen.properties file in the
#     user home directory (these have precedence over all properties)
# For more detailed information about each setting see:
# - https://github.com/gwen-interpreter/gwen/wiki/Runtime-Settings
#
# Format: HOCON (Human-Optimized Config Object Notation superset of JSON)
# - See: https://github.com/lightbend/config/blob/master/HOCON.md
#

# Gwen package version
# --------------------
# Gwen web version (specify desired version or latest for auto updates)
gwen.gwen-web.version=latest

# Selenium version
# ----------------
# To use the provided selenium version bundled in the gwen-web distribution
# (which for most cases will suffice), set this property to the 'provided'
# literal as follows:
#   gwen.selenium.version=provided
# Otherwise specify the specific version you want to use.
# Caution: use a specific version at your own risk and only in exceptional
# cases where you are either:
#   (a) restricted to using a specific native web driver version that isn't
#       compatible with the selenium version bundled in gwen-web, or
#   (b) you have a very legitimate reason to use a different version
gwen.selenium.version=provided

# logging
# -------
log4j.configuration=log4j.properties

# standard gwen settings
# ----------------------
gwen {
  assertion {
    mode = "hard"                 # hard|soft|sustained
  }
  associative {
    meta = false
  }
  auto {
    discover {
      data {
        csv = false
      }
      meta = true
    }
  }
  behavior {
    rules = "lenient"             # lenient|strict
  }
  feature {
    dialect = "en"
    failfast {
      enabled = true
      exit = false
    }
    mode = "imperative"           # imperative|declarative
  }
  mask {
    char = "‚óè"
  }
  parallel {
    maxThreads = 0                # 0 = use all available cores
  }
  rampup {
    interval {
      seconds = 0                 # 0 = non staggerred parallel execution
    }
  }
  report {
    overwrite = true
    suppress {
      meta = false
    }
    slideshow {
      create = false
      framespersecond = 4
    }
  }
  rp {
    debug = false
    heartbeat {
      enabled = true
      timeoutSecs = 3
    }
    send {
      annotations = false
      breadcrumbs = false
      failed {
        envTrace = "none"         # inlined|attached|none
        errorBlocks = "none"      # all|leaf|none
        errorTrace = "none"       # inlined|attached|none
        hierarchy = "inlined"     # inlined|attached|none
        stepDefs = "inlined"      # inlined|nested|none
      }
      markdownBlocks = true
      meta = false
      stepDefs = "none"           # inlined|nested|none
      tags = true
    }
    testCaseId {
      keys = "nodePath+params"    # nodePath+params|sourceRef+params|nodePath|sourceRef|auto
    }
  }
  state {
    level = "feature"             # feature|scenario
  }
  web {
    accept {
      untrusted {
        certs = true
      }
    }
    authorize {
      plugins = false
    }
    browser {
      target = "chrome"           # chrome|firefox|safari|edge|ie
      headless = false
      # size = ""
    }
    capture {
      screenshots {
        enabled = false
        duplicates = false
        highlighting = false
      }
    }
    
    highlight {
      style = "background: yellow; border: 2px solid gold;"
    }
    implicit {
      element {
        focus = true
      }
      js {
        locators = false
      }
    }
    locator {
      wait {
        seconds = 5
      }
    },
    maximize = false
    remote {      
      localFileDetector = false
      # url = ""
    }
    sendKeys {
      clearFirst = false
      clickFirst = false
    }
    suppress {
      images = false
    }
    throttle {
      msecs = 150
    }
    # useragent = ""
    wait {
      seconds = 10
    }
  }
}
