Feature: Number tables meta

  @StepDef
  @DataTable(horizontal="decimal,binary")
  @Context
  Scenario: single row without header contains a number in decimal and binary form
    Given name[1] should be "decimal"
      And name[2] should be "binary"
      And data[1][decimal] should be "3"
      And data[1][binary] should be "11"
      And the decimal data[decimal] should be data[binary] in binary for each data record

  @StepDef
  @DataTable
  @Context
  Scenario: single row with header contains a number in decimal and binary form
    Given name[1] should be "decimal"
      And name[2] should be "binary"
      And data[1][decimal] should be "3"
      And data[1][binary] should be "11"
      And the decimal data[decimal] should be data[binary] in binary for each data record

  @StepDef
  @DataTable(vertical="decimal,binary")
  @Context
  Scenario: single column without header contains a number in decimal and binary form
    Given name[1] should be "decimal"
      And name[2] should be "binary"
      And data[1][decimal] should be "3"
      And data[1][binary] should be "11"
      And the decimal data[decimal] should be data[binary] in binary for each data record

  @StepDef
  @DataTable(header="left")
  @Context
  Scenario: single column with header contains a number in decimal and binary form
    Given name[1] should be "decimal"
      And name[2] should be "binary"
      And data[1][decimal] should be "3"
      And data[1][binary] should be "11"
      And the decimal data[decimal] should be data[binary] in binary for each data record

  @StepDef
  @DataTable(header="top")
  @Context
  Scenario: each row contains a number in decimal and binary form
    Given name[1] should be "decimal"
      And name[2] should be "binary"
      And data[1][decimal] should be "1"
      And data[2][decimal] should be "2"
      And data[3][decimal] should be "3"
      And data[1][binary] should be "1"
      And data[2][binary] should be "10"
      And data[3][binary] should be "11"
      And the decimal data[decimal] should be data[binary] in binary for each data record

  @StepDef
  @DataTable(vertical="decimal,binary")
  @Context
  Scenario: each column contains a number in decimal and binary form
    Given name[1] should be "decimal"
      And name[2] should be "binary"
      And data[1][decimal] should be "4"
      And data[2][decimal] should be "5"
      And data[3][decimal] should be "6"
      And data[1][binary] should be "100"
      And data[2][binary] should be "101"
      And data[3][binary] should be "110"
      And the decimal data[decimal] should be data[binary] in binary for each data record

  @StepDef
  Scenario: the decimal <decimal> should be <binary> in binary
    Given the result is defined by javascript "Number(${$<decimal>}).toString(2)"
     Then the result should be "${$<binary>}"
      And name[1] should be "decimal"
      And name[2] should be "binary"
      And gwen.table.record.number should match regex "\d+"

  @StepDef
  @DataTable
  @Context
  Scenario: each row contains a number and its square and cube
    Given condition is defined by javascript "true"
      And the number is "${number}" for each data record if condition

  @StepDef
  @DataTable(header="left")
  @Context
  Scenario: each column contains a number and its square and cube
    Given name[1] should be "number"
      And name[2] should be "square"
      And name[3] should be "cube"
      And data[1][number] should be "1"
      And data[2][number] should be "2"
      And data[3][number] should be "3"
      And data[1][square] should be "1"
      And data[2][square] should be "4"
      And data[3][square] should be "9"
      And data[1][cube] should be "1"
      And data[2][cube] should be "8"
      And data[3][cube] should be "27"
      And number ^ 2 = square of number for each data record
      And number ^ 3 = cube of number for each data record

  @StepDef
  Scenario: number ^ <power> = <function> of number
    Given the result is defined by javascript "Math.pow(${data[number]}, $<power>)"
     Then the result should start with "${data[$<function>]}"
      And name[1] should be "number"
      And name[2] should be "square"
      And name[3] should be "cube"
      And gwen.table.record.number should match regex "\d+"

  @StepDef
  Scenario: <a> x <b> = <c>
    Given the product is defined by javascript "${$<a>} * ${$<b>}"
     Then the product should be "${$<c>}"

  @StepDef
  @DataTable(horizontal="a,b,c")
  @Context
  Scenario: each row contains two numbers that sum to a Fibonacci number in the third
    Given a + b = c for each data record
     Then name[1] should be "a"
      And name[2] should be "b"
      And name[3] should be "c"
      And data[1][a] should be "0"
      And data[1][b] should be "1"
      And data[1][c] should be "1"
      And data[2][c] should be "2"
      And data[3][c] should be "3"
      And data[4][c] should be "5"
      And data[5][c] should be "8"

  @StepDef
  Scenario: a + b = c
    Given the sum is defined by javascript "${data[a]} + ${data[b]}"
     Then the sum should be "${data[c]}"

  @StepDef
  @Action
  Scenario: tables are nested in stepdefs
    Given each row contains a number in decimal and binary form
          | decimal | binary |
          | 1       | 1      |
          | 2       | 10     |
          | 3       | 11     |
      And the nested table should match against its table

  @StepDef
  Scenario: the nested table should match against its table
    Given each column contains a number in decimal and binary form
          | 4   | 5   | 6   |
          | 100 | 101 | 110 |
     Then everything is "ok"

  @StepDef
  @DataTable
  @Assertion
  Scenario: empty number table should do nothing
    Given z is "${number}" for each data record
