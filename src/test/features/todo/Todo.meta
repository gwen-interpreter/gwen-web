Feature: TodoMVC meta

  @StepDef
  @Context
  Scenario: I launch the Todo app
    Given I resize the window to width 800 and height 800
     When I navigate to "https://todomvc.com/examples/react/dist/"
     Then I should be on the Todo page

  @StepDef
  @Context
  Scenario: I launch the Todo app in session 1
    Given I start a browser for session 1
      And I launch the Todo app

  @StepDef
  @Context
  Scenario: I launch the Todo app in session 2
    Given I start a browser for session 2
      And I launch the Todo app

  @StepDef
  @Assertion
  Scenario: I should be on the Todo page
    Given the heading can be located by tag name "h1"
     Then the heading should be "todos"
      And the todo field can be located by class name "new-todo"
      And the number of active items can be located by css selector ".todo-count"
      And the clear completed button can be located by class name "clear-completed"
      And the number of active items should not be displayed

  @StepDef
  @Action
  Scenario: I add a "<todo>" item
    Given the "$<todo>" item can be located by xpath "//label[contains(.,'$<todo>')]/preceding-sibling::input"
     When I enter "$<todo>" in the todo field
     Then the "$<todo>" item should be unchecked

  @StepDef
  @Action
  Scenario: I copy all items from session 1 to session 2
    Given I switch to session 1
     When I copy item from session 1 to session 2 for each item located by css selector ".todo-list > li > div > label"
     Then I switch to session 2

  @StepDef
  @Action
  Scenario: I copy item from session 1 to session 2
    Given I capture item as copied item
     When I switch to session 2
      And I add a "${copied item}" item
     Then I switch to session 1

  @StepDef
  @Examples(file="src/test/features-data/TodoItems1.csv",prefix="todo.",where="'${todo.Status}'=='pending'")
  @Examples(file="src/test/features-data/TodoItems2.csv",prefix="todo.")
  @Action
  Scenario Outline: I load items from CSV files
     When I add a <todo.Status> "<todo.Item>" item

  @StepDef
  @Examples(file="src/test/features-data/TodoItems1.json",prefix="todo.",where="'${todo.Status}'=='pending'")
  @Examples(file="src/test/features-data/TodoItems2.json",prefix="todo.")
  @Action
  Scenario Outline: I load items from JSON files
     When I add a <todo.Status> "<todo.Item>" item

  @StepDef
  @Examples('src/test/features-data/TodoItems3.csv')
  @Action
  Scenario Outline: I load items from empty CSV file
     When I add a <Status> "<Item>" item

  @StepDef
  @Examples('src/test/features-data/TodoItems3.json')
  @Action
  Scenario Outline: I load items from empty JSON file
     When I add a <Status> "<Item>" item

  @StepDef
  @Examples(file="src/test/features-data/TodoItems4.json",prefix="todo.")
  @Action
  Scenario Outline: I load items from deep JSON file
     When I add a <todo.Item.Status> "<todo.Item.Name>" item

  @StepDef
  @Examples("src/test/features-data/TodoItems5.json")
  @Action
  Scenario Outline: I load items from deep JSON array
     When I add a ${item[1].Status} "${item[0].Name}" item
      And status history count is defined by js "${item[1].StatusHistory}.length"
      And I capture status history count as count

  @StepDef
  @Examples("src/test/features-data/TodoItems6.json")
  @Action
  Scenario Outline: I load items by looping over nested JSON array
    When I add nested item for each item in todo.items array
     
  @StepDef
  Scenario: I add nested item
     When I add a ${item.Status} "${item.Name}" item
      And I bind history for each history in item.StatusHistory array

  @StepDef
  Scenario: I bind history
    Given history item is "${history}"

  @StepDef
  @Action
  Scenario: I add a pending "<todo>" item
     When I add a "$<todo>" item

  @StepDef
  @Action
  Scenario: I add a done "<todo>" item
     When I add a "$<todo>" item
      And I tick the "$<todo>" item

  @StepDef
  @Action
  Scenario: I complete the "<todo>" item
     When I tick the "$<todo>" item

  @StepDef
  @Assertion
  Scenario: the "<todo>" item should be active
     Then the "$<todo>" item should be unticked

  @StepDef
  @Assertion
  Scenario: the "<todo>" item should be completed
     Then the "$<todo>" item should be ticked

  @StepDef
  @Assertion
  Scenario: the "<todo>" item should not be displayed
    Given the "$<todo>" item can be located by xpath "//label[contains(.,'$<todo>')]/preceding-sibling::input"
     Then the "$<todo>" item should not be displayed
