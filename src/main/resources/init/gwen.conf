#
# Common Gwen Settings
# --------------------
# 
# Configure all your common Gwen settings here.
# 
# Configure all your browser level settings in the browser folder.
# Configure all your environment level settings in the envs folder.
#
# 
# For more detailed information about each setting see:
# - https://gweninterpreter.org/docs/settings/reference
#
# Format: HOCON (Human-Optimized Config Object Notation superset of JSON)
# - See: https://github.com/lightbend/config/blob/master/HOCON.md
#

gwen {
  baseDir = "${gwen.initDir}"
  outDir = "${gwen.baseDir}/output"
  target {
    browser = "chrome"            # chrome|firefox|safari|edge|ie
    env = "local"                 # local|dev|test|..
  }
  assertion {
    mode = "hard"                 # hard|soft|sustained
  }
  associative {
    meta = true
  }
  auto {
    discover {
      data {
        csv = false
      }
      meta = true
    }
  }
  behavior {
    rules = "strict"              # strict|lenient
  }
  cli {                           # CLI options
    options {                     # See: http://localhost:3000/docs/settings/reference#cli-settings
      batch  = false
      format = [
        "html"
        # "junit",
        # "json",
        # "rp",
        # "none"
      ]
      conf = [
        "${gwen.baseDir}/browsers/${gwen.target.browser}.conf",
        "${gwen.baseDir}/env/${gwen.target.env}.conf"
      ]
      dryRun = false
      features = [
      ]
      inputData = ""
      meta = [
        "${gwen.baseDir}/meta"
      ]
      parallel = false
      parallelFeatures = false
      report = ${gwen.outDir}/reports
      tags = [
        # "@tag1",
        # "~@tag2",
        # ..
      ]
      verbose = false
    }
  }
  console {
    log {
      colors = true
      stepDefs = true
    }
  }
  feature {
    dialect = "en"
    failfast {
      enabled = true
      exit = false
    }
    mode = "declarative"          # declarative|imperative
  }
  mask {
    char = "*"
  }
  output {
    dir = "${gwen.baseDir}/output"
  }
  parallel {
    maxThreads = 0                # 0 = use all available cores
  }
  rampup {
    interval {
      seconds = 0                 # 0 = non staggerred parallel execution
    }
  }
  report {
    overwrite = false
    suppress {
      meta = true
    }
    slideshow {
      create = false
      framespersecond = 4
    }
  }
  rp {
    debug = false
    heartbeat {
      enabled = true
      timeoutSecs = 3
    }
    send {
      annotations = false
      breadcrumbs = false
      failed {
        envTrace = "none"         # inlined|attached|none
        errorBlocks = "none"      # all|leaf|none
        errorTrace = "none"       # inlined|attached|none
        hierarchy = "inlined"     # inlined|attached|none
        stepDefs = "inlined"      # inlined|nested|none
      }
      markdownBlocks = true
      meta = false
      stepDefs = "none"           # inlined|nested|none
      tags = true
    }
    testCaseId {
      keys = "nodePath+params"    # nodePath+params|sourceRef+params|nodePath|sourceRef|auto
    }
  }
  state {
    level = "feature"             # feature|scenario
  }
  web {
    accept {
      untrusted {
        certs = true
      }
    }
    authorize {
      plugins = false
    }
    browser {
      headless = false
      # size = ""                 # <width>x<height>, eg: 1200x800
    }
    capture {
      screenshots {
        enabled = false
        duplicates = false
        highlighting = false
      }
    }
    highlight {
      style = "background: yellow; border: 2px solid gold;"
    }
    implicit {
      element {
        focus = true
      }
      js {
        locators = false
      }
    }
    locator {
      wait {
        seconds = ${gwen.web.wait.seconds}
      }
    },
    maximize = false
    sendKeys {
      clearFirst = false
      clickFirst = false
    }
    suppress {
      images = false
    }
    throttle {
      msecs = 100
    }
    # useragent = ""
    wait {
      seconds = 10
    }
  }
}

#
# Add any other common system properties or customer settings here.
# Note: surround names with quotes if you exprience path clashes.
#
# Examples:
#
# my {
#   common {
#     prop = "value"
#     "password:masked" = "secret"
#   } 
# }
#
# Or equivalently
#
# my.common.prop = "value"
# "my.common.password:masked" = "secret"
#
